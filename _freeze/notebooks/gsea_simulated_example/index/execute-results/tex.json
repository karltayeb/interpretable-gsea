{
  "hash": "9a60dff1061dfc51bbdc38a9ded5e2a8",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  eval: false \n---\n\n\n\n\n\n\n\n# GSEA with logistic SuSiE, simulated example\n\n## Loading gene sets from `gseasusie`\n\n`gseasusie::load_gene_sets` is a helper function for getting gene sets from different sources in a unified format. It gets curated pathways from the `WebGestaltR`, MSigDb pathways from `msigdbr`.\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#devtools::install_github('karltayeb/gseasusie')\nc2 <- gseasusie:::load_msigdb_geneset_x('C2')\n```\n:::\n\n\n\n\n\n\n\n\nWe get a flat list where each row is a `(gene, gene set)` pair.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(c2$geneSet)\n```\n:::\n\n\n\n\n\n\n\nWe also have access to a human readable description of each gene-set\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(c2$geneSetDes)\n```\n:::\n\n\n\n\n\n\n\n\nFinally, we have a sparse binary matrix encoding gene set membership. \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(c2$X)\n```\n:::\n\n\n\n\n\n\n\n\n## Using logistic SuSiE for gene set enrichment analysis\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom dataclasses import dataclass\nimport numpy as np\nfrom gibss.logisticprofile import logistic_susie, logistic_ser_hermite\n\nnp.random.seed(1)\nX = r.c2['X'].toarray().T\nbeta0 = -3\nbeta = np.zeros(X.shape[0])\nbeta[np.random.choice(beta.size, 5, replace=False)] = 2.\nlogit = beta @ X + beta0\ny = np.random.binomial(1, 1/(1 + np.exp(-logit)))\n\n\n@dataclass\nclass GSEARes:\n  alpha: np.ndarray\n  effects: np.ndarray\n  log_bfs: np.ndarray\n  \nget_alpha = lambda fit: np.array([c.alpha for c in fit.components])\nget_beta = lambda fit: np.array([c.fits.beta for c in fit.components])\nget_lbf = lambda fit: np.array([c.lbf_ser for c in fit.components])\n\ndef gsea(X, y, L=5, prior_variance = 1, maxiter = 10, tol=1e-3):\n  # TODO: check types\n  fit = logistic_susie(\n    X.astype(float), y.astype(float),\n    L=L, method='hermite',\n    serkwargs=dict(m=1, prior_variance=1.0)\n  )\n  return GSEARes(get_alpha(fit), get_beta(fit), get_lbf(fit))\n\n# fit SER for marginal analysis\nserfit = logistic_ser_hermite(\n  coef_init = np.zeros((X.shape[0], 2)), \n  X = X.astype(float), \n  y = y.astype(float), \n  offset = 0., \n  prior_variance = 1.,\n  m = 1\n)\n# extract relevant info from SER\nmarginal_results = dict(\n  lbf=np.array(serfit.fits.lbf),\n  effect=np.array(serfit.fits.beta)\n)\n\ngseafit = gsea(X, y, L=10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_cs <- function(alpha, coverage=0.95){\n  idx <- rev(order(alpha))\n  mass <- cumsum(alpha[idx])\n  last = which(mass >= coverage)[1]\n  cs <- idx[1:last]\n  return(list(cs=cs, alpha=alpha[cs], coverage = mass[last], target_coverage=coverage))\n}\n\ngseafit <- py$gseafit\nidx <- which(py$beta !=0)\nalpha <- py$gseafit$alpha\ncs <- purrr::map(1:nrow(alpha), ~compute_cs(alpha[.x,]))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# the first 4 components have evidence of association.\ngseafit$log_bfs\n\n# the CSs fo the first 3 are singletons, \n# while the CS for th 4th component has 10 gene sets\npurrr::map_int(cs, ~length(.x$cs))\n\n# the PIP of the top SNP in each CS\npurrr::map_dbl(cs, ~.x$alpha[1])\n\n# check if the top snp is causal\npurrr::map_int(cs, ~.x$cs[1]) %in% idx\n```\n:::\n\n\n\n\n\n\n\n\nWe can see that each of the singleton CSs identify on of the \"active\" gene sets.\nThe 4th CS captures one of the two remaining effects. The SNP with the top PIP is the causal SNP.\nThe CSs corresponding to the other effects (L5-L10) are very large, containing thousands of GSs, and the maximum PIP is small ($< 0.1$). We also see the the log BF for the SER, which quantifies the evidence for any one SNP having an effect over the global null favor the null hypothesis. \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check which CSs include which of the causal variables\nincidence <- do.call(rbind, purrr::map(1:10, ~as.integer(idx %in% cs[[.x]]$cs)))\nrownames(incidence) <- paste0('L', 1:nrow(incidence))\ncolnames(incidence) <- paste0('GS', 1:ncol(incidence))\nincidence\n```\n:::\n\n\n\n\n\n\n\n\nWe compare the results against a marginal (on GS at a time) analysis, which is typical for GSEA.\nThe most direct comparison would be to the Baysian logistic regression with fixed prior variance.\n\nThe GS discovered in `L1-3` correspond to the three strongest marginal effects.\nHowever, we see that the GS captures in `L4` has the 16th strongest marginal effect.\nWe see that the causal GS that is not discovered in our analysis has the 144th strongest association, and a log BF of $\\approx 2.77$, corresponding to a BF of $\\approx 16$. Jeffreys proposed a threshold of $10$ for \"strong\" evidence, while Kass and Raftery later propose a treshold of $20$, so we will call this \"moderately-strong\" evidence of association. However, due to the multiple testing burden we judge it approporiate that this effect was not reported.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nmarginal_analysis <- with(py$marginal_results, tibble::tibble(\n  GS = colnames(c2$X),\n  i = 1:ncol(c2$X),\n  lbf=lbf,\n  effect=effect\n))\n\nmarginal_analysis %>%\n  mutate(causal = i %in% idx) %>%\n  arrange(desc(lbf)) %>%\n  mutate(rank = 1:n()) %>%\n  filter(causal)\n```\n:::\n\n\n\n\n\n\n\nWhich causal gene sets are driving the association of the 4-15th top marginal gene sets?\nThey all have substantial overlap with `M8520`, the top marginal enrichment.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmiddle_gene_sets <- marginal_analysis %>%\n  mutate(causal = i %in% idx) %>%\n  arrange(desc(lbf)) %>%\n  mutate(ran = 1:n()) %>%\n  head(15) %>% tail(12) %>%\n  {.$i}\n\nMatrix::t(c2$X[,middle_gene_sets]) %*% (c2$X[, idx])\n```\n:::\n\n\n\n\n\n\n\n\nIn this simulation, although the causal gene set are for genes upregulated in\nnon-small cell lung cancers, we see that there are gene sets associated with immune response, cell cycle, and a host of other cancers. The data show overwhelming support for the top effect.\nConditional on the first effect, the other gene sets are no longer predictive of inclusion in the list of genes provided. However, the extremely strong marginal enrichments in these other gene sets and cancer types would obscure this result.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarginal_analysis %>%\n  arrange(desc(lbf)) %>%\n  head(15) %>%\n  rename(geneSet = GS) %>%\n  left_join(select(c2$geneSetDes, c(geneSet, description))) %>%\n  select(c(geneSet, description, lbf))\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}